<style>
    html, body, #map {
        margin: 0;
        width: 100%;
        height: 100%;
    }
    h1 {
        font-size: 3em;
        font-weight: bold;
        margin-bottom: 1em;
    }
    h2 {
        font-size: 2.3em;
        font-weight: bold;
        margin-bottom: 0.5em;
    }
    table {
        display: none;
    }
    .overlay {
        position: absolute;
        z-index: 9999;
        background-color: #fff;
        border-radius: 15px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        padding: 15px;
    }
    .spot_size, .spot_color {
        display: inline-block;
        text-align: center;
    }
    .spot_circle {
        border: 2px solid #000;
        background-color: #aaa;
        margin: 0 5px;
        border-radius: 50%;
        width: <%= (@geograph.max_spot_size * 2) - 2 %>px;
        height: <%= (@geograph.max_spot_size * 2) - 2 %>px;
    }
    #legend > div {
        display: inline-block;
    }
    .gradient li {
        width: 200px;
        height: 20px;
    }
    .olPopupCloseBox {
        background: url(<%= image_path('openlayers/close.png') %>) no-repeat;
    }
    #legend {
        left: 100px;
        bottom: 25px;
    }
    #controls {
        bottom: 25px;
        right: 25px;
    }
    #geo_graph_title {
        top: 25px;
        right: 25px;
    }
    <%= ColorTheme.all.map{ |color_theme| ".color_theme_#{color_theme.id} { background-image: -webkit-linear-gradient( left, #{color_theme.gradient.map do |color| color[1].to_s + ' ' + color[0].to_s + '%' end.join(',')} ); }" }.join %>
</style>
<script>
    var places, map, spots, base, googleProj, standardProj, path = '<%= geo_graph_path(@geograph) %>.json';

    $(function() {
        $('#edit_geo_graph_<%= @geograph.id %> input[type=submit]').hide();
        $('#edit_geo_graph_<%= @geograph.id %>').find('input, select').change(function(e) { place_spots(); } );
        //$('#edit_geo_graph_<%= @geograph.id %>').bind('ajax:success', function() { place_spots(); } );
        $('#hideTable').click(function() { $('table').toggle() });
        OpenLayers.ImgPath = '<%= image_path('openlayers') %>/';
        map = new OpenLayers.Map('map');
        spots = new OpenLayers.Layer.Vector("Spots");
        base = new OpenLayers.Layer.Google("Google Streets", { isBaseLayer: true, numZoomLevels: 20 });
        map.addLayer(base);
        map.zoomToMaxExtent();
        map.addControl(new OpenLayers.Control.KeyboardDefaults());
        map.addLayer(spots);
        selectControl = new OpenLayers.Control.SelectFeature(spots);
        spots.events.on({
            'featureselected': function(clicked) {
                feature = clicked.feature;
                popup = new OpenLayers.Popup.FramedCloud("chicken", 
                    feature.geometry.getBounds().getCenterLonLat(),
                    null,
                    "<div style='font-size:.8em'>Place: " + feature.data.placeName +"<br>"
                        + $('#geo_graph_size_measure_id option:selected').text() + ' (size): ' + feature.data.sizeMeasureValue
                        + "<br />"
                        + $('#geo_graph_color_measure_id option:selected').text() + ' (color): ' + feature.data.colorMeasureValue
                        + "</div>",
                    null,
                    true
                );
                feature.popup = popup;
                map.addPopup(popup);
            }
        });
        map.addControl(selectControl);
        selectControl.activate();
        googleProj = map.getProjectionObject();
        standardProj = new OpenLayers.Projection('EPSG:4326');
        place_spots();
    }); 
</script>

<%= javascript_include_tag('http://maps.google.com/maps/api/js?v=3.5&sensor=false') %>
<%= javascript_include_tag('openlayers/OpenLayers') %>
<%= javascript_include_tag(params[:controller].singularize + '/' + params[:action]) %>

<h1 class="overlay" id="geo_graph_title"><%= @geograph.name %></h1>

<div class="overlay" id="controls">
    <h2>Settings</h2>
    <%= semantic_form_for @geograph, :remote => true do |f| %>
        <%= f.inputs do %>
            <% unless @geograph.measures.empty? %>
                <%= f.input :size_measure, :as => :select, :collection => @geograph.measures, :include_blank => false %>
                <%= f.input :color_measure, :as => :select, :collection => @geograph.measures, :include_blank => false %>
                <%= f.input :color_theme, :as => :radio, :value_as_class => true, :member_label => '', :wrapper_html => { :class => :gradient } %>
            <% end %>
        <%= f.buttons %>
        <% end %>
    <% end %>
    <button id="hideTable">Toggle Data Table</button>
</div>

<div class="overlay" id="legend">
    <h2>Legend</h2>
    <div id="sizes">
        <h3>Sizes</h3>
    </div>
    <div id="colors">
        <h3>Colors</h3>
    </div>
</div>

<div id="map"></div>

<table> 
    <thead>
        <tr>
            <th>Place Name</th>
            <% @geograph.all_measures.each do |measure| %>
                <th><%= measure.name %></th>
            <% end %>
        </tr>
    </thead>
    <tbody>
        <% @geograph.places.each do |place| %>
            <tr>
                <td><%= place.name %></td>
                <% @geograph.measures.each do |measure| %>
                    <td><%= measure.value(place) %></td>
                <% end %>
            </tr>
        <% end %>
    </tbody>
</table>
